name: Test Suite

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        cd cryptotronbot_backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_test.txt

    - name: Lint with flake8
      run: |
        cd cryptotronbot_backend
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        cd cryptotronbot_backend
        pytest tests/ -v --cov=. --cov-report=xml --cov-report=html

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./cryptotronbot_backend/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        cd cryptotronbot_backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_test.txt

    - name: Run integration tests
      run: |
        cd cryptotronbot_backend
        pytest tests/integration/ -v --tb=short

    - name: Run API tests
      run: |
        cd cryptotronbot_backend
        pytest tests/api/ -v --tb=short

  security-scan:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        cd cryptotronbot_backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety bandit

    - name: Run safety check
      run: |
        cd cryptotronbot_backend
        safety check

    - name: Run bandit security scan
      run: |
        cd cryptotronbot_backend
        bandit -r . -f json -o bandit-report.json || true

    - name: Upload bandit report
      uses: actions/upload-artifact@v3
      with:
        name: bandit-report
        path: cryptotronbot_backend/bandit-report.json

